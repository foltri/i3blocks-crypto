#!/usr/bin/env python3
# coding=utf-8

import json
import requests
import os
import sys

# font and color in Regolith 1.5.1
FONT = "JetBrains Mono Medium 13"
COLOR = '#E6E1CF'

PRICE_CHANGE_PERIOD = '4h'  # Available: '1h', '24h', '7d'
PRICE_CHANGE_URGENT_PERCENT = 10
PRICE_CHANGE_TO_COLOR = 5

API_URL = 'https://api.binance.com/api/v3/klines?symbol={}&interval={}&limit=1'  # Binance API
coin = os.environ.get('BLOCK_INSTANCE', "BTCUSDT")
r = requests.get(API_URL.format(coin, PRICE_CHANGE_PERIOD))
data = json.loads(r.text)[0]

# open binance on click
if os.environ.get('BLOCK_BUTTON') == "1":
    web = "https://www.binance.com/en/trade/{}".format(coin)
    os.system("xdg-open " + web)

price = float(data[4])  # close
price_open = float(data[1])

# if argument is given, use it as compare_price otherwise use price_open
if len(sys.argv) > 1: compare_price = float(sys.argv[1])
else:                 compare_price = price_open

percent_change = (price - compare_price) / compare_price * 100

if price > 100:   precision = 0
elif price > 0.1: precision = 2
else:             precision = 6

percent_change_format = '<span color="{}" font_desc="{}"> {}{:.2f}%</span>'
value_format = '<span font_desc="{}">' + ' {:,.' + str(precision) + 'f}</span>'

# set color based on percent change
color = COLOR
if percent_change > 0:
    if abs(percent_change) > PRICE_CHANGE_TO_COLOR: color = '#3BB92D'
    arrow = '▲'
else:
    if abs(percent_change) > PRICE_CHANGE_TO_COLOR: color = '#F7555E'
    arrow = '▼'

percent_change_info = percent_change_format.format(color, FONT, arrow, percent_change)
value_info = value_format.format(FONT, price)

print(value_info + percent_change_info)  # Full Text
print(value_info)  # Short Text

if percent_change > PRICE_CHANGE_URGENT_PERCENT:
    exit(33)
